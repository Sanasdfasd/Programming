#include <iostream>
#include <cstring>
#include <memory>
#include <stdlib.h> 
#include <time.h>       

using namespace std;
int global_sudoku[9][9];
int marker_set[9][9];
int retur=2;

void recursive_generator(int sudoku[][9],int row, int column)
{

if(row==9)
{
  retur=1;
  int k,l;
  for(k=0;k<9;k++)
  {
	for(l=0;l<9;l++)
	{
       global_sudoku[k][l]=sudoku[k][l];
	}
  } 

  return ;
}
else
{
 int mark[10];
 int i,j;
//Row's can be filled in the same way.
 memset(mark,0,sizeof(mark));
for(i=0;i<column;i++)
{
	mark[sudoku[row][i]]=1;
}
//columns can be filled
for(i=0;i<row;i++)
{
	mark[sudoku[i][column]]=1;
}

int x_cord=row/3;
int y_cord=column/3;
 int ls=x_cord*3+3;
 int rs=y_cord*3+3;
// cout<<"the values of x_cord and y_cord are"<<x_cord<<" "<<y_cord<<endl;
 for(i=(x_cord*3);i<ls;i++)
 {
    for(j=(y_cord*3);j<rs;j++)
    {
    	mark[sudoku[i][j]]=1;
    }
 }
 //generate Random number. 

 int random_num[10];
 memset(random_num,0,sizeof random_num);
int count=1;
 srand (time(NULL));
 while(count!=10)
 {
     int rno= rand()%9+1;
     while(rno!=0){
     	int ks=0,fal=0;
     	for(ks=1;ks<=9;ks++)
     	{
     		if(rno==random_num[ks])
     		{
     			fal=1;
                break;     
     		}
     	}
     	if(fal==0){
     		//cout<<"the random_num added is "<<rno<<endl;
     		random_num[count]=rno;
     		rno=0;
     		count++;
     	}
     	else{
     		rno=rand()%9+1;
     	}
     }
 }

for(i=1;i<=9;i++)
{
	int temp_row=row;
	int temp_col=column;
	if(mark[random_num[i]]==0)
	{
      sudoku[temp_row][temp_col]=random_num[i];
      if((temp_col+1)%9==0)
      {
      	temp_col=-1;
      	temp_row=row+1;
      }
      recursive_generator(sudoku,temp_row,temp_col+1);
 
       int dd1,dd2;
       for(dd1=row;dd1<9;dd1++)
       {
       	for(dd2=column;dd2<9;dd2++)
       	{
       		sudoku[dd1][dd2]=0;
       	}
       }
       if(retur==1)
      {
     	break;
      }

	}
}

}

}
void print_sudoku()
{
 int k,l;
 cout<<endl<<endl;
   for(k=0;k<9;k++)
  {
	for(l=0;l<9;l++)
	{
		if(l==0)
			cout<<"\t\t";
		if(marker_set[k][l]==0)
		  cout <<" "<<global_sudoku[k][l];
	    else
	      cout <<" "<<"_";
		if((l+1)%3==0 && l!=8)
			cout<<" |";
       
	}
	int zs=0;
         if((k+1)%3==0 && (k+1)!=9)
        {	cout<<endl<<"\t\t";
         		for(zs=0;zs<11;zs++)
	           {
		          cout<<" +";
		       } 
		}
	cout<<endl;
  }
  cout<<endl<<endl;
}


int main()
{
int option=0;
cout<<"\n       \t   Enter 1. Play \n\t\t 2. Solution \n\t\t 3. Exit\n";
 option=1;
while(option!=3)
{
	retur=2;
 int rand_no;
 int sudoku[9][9];
 memset(sudoku,0,sizeof(sudoku));
 srand (time(NULL));
 rand_no=rand()%9+1;
  sudoku[0][0]=rand_no;
 memset(global_sudoku,0,sizeof(global_sudoku));
 memset(marker_set,0,sizeof(marker_set));
recursive_generator(sudoku,0,1);
if(option==1)
{
	system("cls");
int count=0;
int random_num[81];
memset(random_num,0,sizeof(random_num));
 srand (time(NULL));
 while(count!=51)
 {
     int rno= rand()%81;
     while(rno!=0){
     	int ks=0,fal=0;
     	for(ks=0;ks<count;ks++)
     	{
     		if(rno==random_num[ks])
     		{
     			fal=1;
                break;     
     		}
     	}
     	if(fal==0){
     		//cout<<"the random_num added is "<<rno<<endl;
     		random_num[count]=rno;
     		int row_cordinate,col_cordinate;
     		row_cordinate=rno/9;
     		col_cordinate=rno%9;
            marker_set[row_cordinate][col_cordinate]=1;
     		rno=0;
     		count++;
     	}
     	else{
     		rno=rand()%81;
     	}
     }
 }
 print_sudoku();
}
cout<<"\n       \t   Enter 1. Play \n\t\t 2. Solution \n\t\t 3. Exit\n";
cin>>option;

if(option==2){
	memset(marker_set,0,sizeof(marker_set));
    print_sudoku();
  }
if(option>3)
  {cout<<"Selected wrong option please Enter your option again"<<endl;
	cin>>option;
  }
}
system("cls");
	return 0;
}